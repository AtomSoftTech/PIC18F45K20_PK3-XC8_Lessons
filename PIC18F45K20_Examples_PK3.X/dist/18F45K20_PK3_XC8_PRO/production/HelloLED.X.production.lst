

Microchip Technology PIC18 PRO Macro Assembler V1.32 build 58300 
                                                                                               Wed Jul 09 00:20:56 2014

Microchip Technology Omniscient Code Generator (PRO mode) build 58300
     1                           	processor	18F45K20
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	pm
     5                           	psect	nvCOMRAM,global,class=COMRAM,space=1,delta=1
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
     8                           	psect	text0,global,reloc=2,class=CODE,delta=1
     9                           	psect	text1,global,reloc=2,class=CODE,delta=1
    10                           	psect	text2,global,reloc=2,class=CODE,delta=1
    11                           	psect	text3,global,reloc=2,class=CODE,delta=1
    12                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    13                           	psect	rparam,global,class=COMRAM,space=1,delta=1
    14                           	psect	pa_nodes,global,class=CODE,delta=1
    15  0000                     _ADCON0	set	4034
    16  0000                     _ADCON0bits	set	4034
    17  0000                     _ADCON1	set	4033
    18  0000                     _ADCON2	set	4032
    19  0000                     _ADRESH	set	4036
    20  0000                     _ANSEL	set	3966
    21  0000                     _ANSELH	set	3967
    22  0000                     _ANSELbits	set	3966
    23  0000                     _INTCON2bits	set	4081
    24  0000                     _INTCONbits	set	4082
    25  0000                     _LATD	set	3980
    26  0000                     _PORTBbits	set	3969
    27  0000                     _T0CON	set	4053
    28  0000                     _T0CONbits	set	4053
    29  0000                     _TMR0H	set	4055
    30  0000                     _TMR0L	set	4054
    31  0000                     _TRISAbits	set	3986
    32  0000                     _TRISBbits	set	3987
    33  0000                     _TRISD	set	3989
    34  0000                     _WPUBbits	set	3964
    35                           intcon	equ	0xFF2
    36                           intcon2	equ	0xFF1
    37                           status	equ	0xFD8
    38                           
    39                           	psect	nvCOMRAM
    40  000003                     __pnvCOMRAM:
    41                           	opt stack 0
    42  000003                     _LED_Display:
    43                           	opt stack 0
    44  000003                     	ds	1
    45                           
    46                           ; #config settings
    47  0000                     intcon	equ	0xFF2
    48                           intcon2	equ	0xFF1
    49                           status	equ	0xFD8
    50                           
    51                           	psect	cinit
    52  007F68                     __pcinit:
    53                           	opt stack 0
    54  007F68                     start_initialization:
    55                           	opt stack 0
    56  007F68                     __initialization:
    57                           	opt stack 0
    58  007F68                     end_of_initialization:
    59                           	opt stack 0
    60  007F68                     __end_of__initialization:
    61                           	opt stack 0
    62  007F68  0100               	movlb	0
    63  007F6A  EFCC  F03F         	goto	_main	;jump to C main() function
    64                           intcon	equ	0xFF2
    65                           intcon2	equ	0xFF1
    66                           status	equ	0xFD8
    67                           
    68                           	psect	cstackCOMRAM
    69  000001                     __pcstackCOMRAM:
    70                           	opt stack 0
    71  000001                     main@SwitchPressed:
    72                           	opt stack 0
    73                           
    74                           ; 1 bytes @ 0x0
    75  000001                     	ds	1
    76  000002                     main@Direction:
    77                           	opt stack 0
    78                           
    79                           ; 1 bytes @ 0x1
    80  000002                     	ds	1
    81                           intcon	equ	0xFF2
    82                           intcon2	equ	0xFF1
    83                           status	equ	0xFD8
    84                           
    85 ;;
    86 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
    87 ;;
    88 ;; *************** function _main *****************
    89 ;; Defined at:
    90 ;;		line 29 in file "main.c"
    91 ;; Parameters:    Size  Location     Type
    92 ;;		None
    93 ;; Auto vars:     Size  Location     Type
    94 ;;  Direction       1    1[COMRAM] enum E4331
    95 ;;  SwitchPresse    1    0[COMRAM] enum E3679
    96 ;; Return value:  Size  Location     Type
    97 ;;		None               void
    98 ;; Registers used:
    99 ;;		wreg, status,2, status,0, cstack
   100 ;; Tracked objects:
   101 ;;		On entry : 0/0
   102 ;;		On exit  : 0/0
   103 ;;		Unchanged: 0/0
   104 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   105 ;;      Params:         0       0       0       0       0       0       0
   106 ;;      Locals:         2       0       0       0       0       0       0
   107 ;;      Temps:          0       0       0       0       0       0       0
   108 ;;      Totals:         2       0       0       0       0       0       0
   109 ;;Total ram usage:        2 bytes
   110 ;; Hardware stack levels required when called:    1
   111 ;; This function calls:
   112 ;;		_ADC_Convert
   113 ;;		_ADC_Init
   114 ;;		_Timer0_Init
   115 ;; This function is called by:
   116 ;;		Startup code after reset
   117 ;; This function uses a non-reentrant model
   118 ;;
   119                           
   120                           	psect	text0
   121  007F98                     __ptext0:
   122                           	opt stack 0
   123  007F98                     _main:
   124                           	opt stack 30
   125                           
   126                           ;main.c: 30: LEDDirections Direction = LEFT2RIGHT;
   127                           
   128                           ;incstack = 0
   129  007F98  6A02               	clrf	main@Direction,c
   130                           
   131                           ;main.c: 31: BOOL SwitchPressed = FALSE;
   132  007F9A  6A01               	clrf	main@SwitchPressed,c
   133                           
   134                           ;main.c: 33: LED_Display = 1;
   135  007F9C  0E01               	movlw	1
   136  007F9E  6E03               	movwf	_LED_Display,c
   137                           
   138                           ;main.c: 36: TRISD = 0b00000000;
   139  007FA0  6A95               	clrf	3989,c	;volatile
   140                           
   141                           ;main.c: 37: TRISAbits.TRISA0 = 1;
   142  007FA2  8092               	bsf	3986,0,c	;volatile
   143                           
   144                           ;main.c: 39: INTCON2bits.RBPU = 0;
   145  007FA4  9EF1               	bcf	intcon2,7,c	;volatile
   146                           
   147                           ;main.c: 40: WPUBbits.WPUB0 = 1;
   148  007FA6  807C               	bsf	3964,0,c	;volatile
   149                           
   150                           ;main.c: 43: TRISBbits.TRISB0 = 1;
   151  007FA8  8093               	bsf	3987,0,c	;volatile
   152                           
   153                           ;main.c: 46: Timer0_Init();
   154  007FAA  ECBC  F03F         	call	_Timer0_Init	;wreg free
   155                           
   156                           ;main.c: 49: ADC_Init();
   157  007FAE  ECC3  F03F         	call	_ADC_Init	;wreg free
   158  007FB2                     l691:
   159                           
   160                           ;main.c: 53: if (Direction == LEFT2RIGHT) {
   161  007FB2  6602               	tstfsz	main@Direction,c
   162  007FB4  D006               	goto	l699
   163                           
   164                           ;main.c: 54: LED_Display <<= 1;
   165  007FB6  90D8               	bcf	status,0,c
   166  007FB8  3603               	rlcf	_LED_Display,f,c
   167                           
   168                           ;main.c: 55: if (LED_Display == 0)
   169  007FBA  6603               	tstfsz	_LED_Display,c
   170  007FBC  D002               	goto	l699
   171                           
   172                           ;main.c: 56: LED_Display = 1;
   173  007FBE  0E01               	movlw	1
   174  007FC0  6E03               	movwf	_LED_Display,c
   175  007FC2                     l699:
   176                           
   177                           ;main.c: 57: }
   178                           ;main.c: 58: if (Direction == RIGHT2LEFT) {
   179  007FC2  0402               	decf	main@Direction,w,c
   180  007FC4  E106               	bnz	l707
   181                           
   182                           ;main.c: 59: LED_Display >>= 1;
   183  007FC6  90D8               	bcf	status,0,c
   184  007FC8  3203               	rrcf	_LED_Display,f,c
   185                           
   186                           ;main.c: 60: if (LED_Display == 0)
   187  007FCA  6603               	tstfsz	_LED_Display,c
   188  007FCC  D002               	goto	l707
   189                           
   190                           ;main.c: 61: LED_Display = 0x80;
   191  007FCE  0E80               	movlw	128
   192  007FD0  6E03               	movwf	_LED_Display,c
   193  007FD2                     l707:
   194                           
   195                           ;main.c: 62: }
   196                           ;main.c: 64: LATD = LED_Display;
   197  007FD2  C003  FF8C         	movff	_LED_Display,3980	;volatile
   198  007FD6                     l709:
   199                           
   200                           ;main.c: 67: if (PORTBbits.RB0 == 1) {
   201  007FD6  A081               	btfss	3969,0,c	;volatile
   202  007FD8  D002               	goto	l57
   203                           
   204                           ;main.c: 68: SwitchPressed = FALSE;
   205  007FDA  6A01               	clrf	main@SwitchPressed,c
   206                           
   207                           ;main.c: 69: } else if (SwitchPressed == FALSE)
   208  007FDC  D009               	goto	l58
   209  007FDE                     l57:
   210  007FDE  6601               	tstfsz	main@SwitchPressed,c
   211  007FE0  D007               	goto	l58
   212                           
   213                           ;main.c: 70: {
   214                           ;main.c: 71: SwitchPressed = TRUE;
   215  007FE2  0E01               	movlw	1
   216  007FE4  6E01               	movwf	main@SwitchPressed,c
   217                           
   218                           ;main.c: 73: if (Direction == LEFT2RIGHT)
   219  007FE6  6602               	tstfsz	main@Direction,c
   220  007FE8  D002               	goto	l60
   221                           
   222                           ;main.c: 74: Direction = RIGHT2LEFT;
   223  007FEA  6E02               	movwf	main@Direction,c
   224  007FEC  D001               	goto	l58
   225  007FEE                     l60:
   226                           
   227                           ;main.c: 75: else
   228                           ;main.c: 76: Direction = LEFT2RIGHT;
   229  007FEE  6A02               	clrf	main@Direction,c
   230  007FF0                     l58:
   231                           
   232                           ;main.c: 77: }
   233                           ;main.c: 79: } while (INTCONbits.TMR0IF == 0);
   234  007FF0  A4F2               	btfss	intcon,2,c	;volatile
   235  007FF2  D7F1               	goto	l709
   236                           
   237                           ;main.c: 82: INTCONbits.TMR0IF = 0;
   238  007FF4  94F2               	bcf	intcon,2,c	;volatile
   239                           
   240                           ;main.c: 85: TMR0H = ADC_Convert();
   241  007FF6  ECB7  F03F         	call	_ADC_Convert	;wreg free
   242  007FFA  6ED7               	movwf	4055,c	;volatile
   243                           
   244                           ;main.c: 86: TMR0L = 0;
   245  007FFC  6AD6               	clrf	4054,c	;volatile
   246  007FFE  D7D9               	goto	l691
   247  008000                     __end_of_main:
   248                           	opt stack 0
   249                           intcon	equ	0xFF2
   250                           intcon2	equ	0xFF1
   251                           status	equ	0xFD8
   252                           
   253 ;; *************** function _Timer0_Init *****************
   254 ;; Defined at:
   255 ;;		line 92 in file "main.c"
   256 ;; Parameters:    Size  Location     Type
   257 ;;		None
   258 ;; Auto vars:     Size  Location     Type
   259 ;;		None
   260 ;; Return value:  Size  Location     Type
   261 ;;		None               void
   262 ;; Registers used:
   263 ;;		wreg, status,2
   264 ;; Tracked objects:
   265 ;;		On entry : 0/0
   266 ;;		On exit  : 0/0
   267 ;;		Unchanged: 0/0
   268 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   269 ;;      Params:         0       0       0       0       0       0       0
   270 ;;      Locals:         0       0       0       0       0       0       0
   271 ;;      Temps:          0       0       0       0       0       0       0
   272 ;;      Totals:         0       0       0       0       0       0       0
   273 ;;Total ram usage:        0 bytes
   274 ;; Hardware stack levels used:    1
   275 ;; This function calls:
   276 ;;		Nothing
   277 ;; This function is called by:
   278 ;;		_main
   279 ;; This function uses a non-reentrant model
   280 ;;
   281                           
   282                           	psect	text1
   283  007F78                     __ptext1:
   284                           	opt stack 0
   285  007F78                     _Timer0_Init:
   286                           	opt stack 30
   287                           
   288                           ;main.c: 93: INTCONbits.TMR0IF = 0;
   289                           
   290                           ;incstack = 0
   291  007F78  94F2               	bcf	intcon,2,c	;volatile
   292                           
   293                           ;main.c: 94: T0CON = 0b00000001;
   294  007F7A  0E01               	movlw	1
   295  007F7C  6ED5               	movwf	4053,c	;volatile
   296                           
   297                           ;main.c: 95: TMR0H = 0;
   298  007F7E  6AD7               	clrf	4055,c	;volatile
   299                           
   300                           ;main.c: 96: TMR0L = 0;
   301  007F80  6AD6               	clrf	4054,c	;volatile
   302                           
   303                           ;main.c: 97: T0CONbits.TMR0ON = 1;
   304  007F82  8ED5               	bsf	4053,7,c	;volatile
   305  007F84  0012               	return	
   306  007F86                     __end_of_Timer0_Init:
   307                           	opt stack 0
   308                           intcon	equ	0xFF2
   309                           intcon2	equ	0xFF1
   310                           status	equ	0xFD8
   311                           
   312 ;; *************** function _ADC_Init *****************
   313 ;; Defined at:
   314 ;;		line 100 in file "main.c"
   315 ;; Parameters:    Size  Location     Type
   316 ;;		None
   317 ;; Auto vars:     Size  Location     Type
   318 ;;		None
   319 ;; Return value:  Size  Location     Type
   320 ;;		None               void
   321 ;; Registers used:
   322 ;;		wreg, status,2
   323 ;; Tracked objects:
   324 ;;		On entry : 0/0
   325 ;;		On exit  : 0/0
   326 ;;		Unchanged: 0/0
   327 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   328 ;;      Params:         0       0       0       0       0       0       0
   329 ;;      Locals:         0       0       0       0       0       0       0
   330 ;;      Temps:          0       0       0       0       0       0       0
   331 ;;      Totals:         0       0       0       0       0       0       0
   332 ;;Total ram usage:        0 bytes
   333 ;; Hardware stack levels used:    1
   334 ;; This function calls:
   335 ;;		Nothing
   336 ;; This function is called by:
   337 ;;		_main
   338 ;; This function uses a non-reentrant model
   339 ;;
   340                           
   341                           	psect	text2
   342  007F86                     __ptext2:
   343                           	opt stack 0
   344  007F86                     _ADC_Init:
   345                           	opt stack 30
   346                           
   347                           ;main.c: 104: ANSEL = 0;
   348                           
   349                           ;incstack = 0
   350  007F86  6A7E               	clrf	3966,c	;volatile
   351                           
   352                           ;main.c: 105: ANSELH = 0;
   353  007F88  6A7F               	clrf	3967,c	;volatile
   354                           
   355                           ;main.c: 106: ANSELbits.ANS0 = 1;
   356  007F8A  807E               	bsf	3966,0,c	;volatile
   357                           
   358                           ;main.c: 110: ADCON1 = 0;
   359  007F8C  6AC1               	clrf	4033,c	;volatile
   360                           
   361                           ;main.c: 128: ADCON2 = 0b00111000;
   362  007F8E  0E38               	movlw	56
   363  007F90  6EC0               	movwf	4032,c	;volatile
   364                           
   365                           ;main.c: 131: ADCON0 = 0b00000001;
   366  007F92  0E01               	movlw	1
   367  007F94  6EC2               	movwf	4034,c	;volatile
   368  007F96  0C01               	retlw	1
   369  007F98                     __end_of_ADC_Init:
   370                           	opt stack 0
   371                           intcon	equ	0xFF2
   372                           intcon2	equ	0xFF1
   373                           status	equ	0xFD8
   374                           
   375 ;; *************** function _ADC_Convert *****************
   376 ;; Defined at:
   377 ;;		line 134 in file "main.c"
   378 ;; Parameters:    Size  Location     Type
   379 ;;		None
   380 ;; Auto vars:     Size  Location     Type
   381 ;;		None
   382 ;; Return value:  Size  Location     Type
   383 ;;                  1    wreg      unsigned char 
   384 ;; Registers used:
   385 ;;		wreg, status,2
   386 ;; Tracked objects:
   387 ;;		On entry : 0/0
   388 ;;		On exit  : 0/0
   389 ;;		Unchanged: 0/0
   390 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   391 ;;      Params:         0       0       0       0       0       0       0
   392 ;;      Locals:         0       0       0       0       0       0       0
   393 ;;      Temps:          0       0       0       0       0       0       0
   394 ;;      Totals:         0       0       0       0       0       0       0
   395 ;;Total ram usage:        0 bytes
   396 ;; Hardware stack levels used:    1
   397 ;; This function calls:
   398 ;;		Nothing
   399 ;; This function is called by:
   400 ;;		_main
   401 ;; This function uses a non-reentrant model
   402 ;;
   403                           
   404                           	psect	text3
   405  007F6E                     __ptext3:
   406                           	opt stack 0
   407  007F6E                     _ADC_Convert:
   408                           	opt stack 30
   409                           
   410                           ;main.c: 135: ADCON0bits.GO_DONE = 1;
   411                           
   412                           ;incstack = 0
   413  007F6E  82C2               	bsf	4034,1,c	;volatile
   414  007F70                     l74:
   415  007F70  B2C2               	btfsc	4034,1,c	;volatile
   416  007F72  D7FE               	goto	l74
   417                           
   418                           ;main.c: 137: return ADRESH;
   419  007F74  50C4               	movf	4036,w,c	;volatile
   420  007F76  0012               	return	
   421  007F78                     __end_of_ADC_Convert:
   422                           	opt stack 0
   423  0000                     intcon	equ	0xFF2
   424                           intcon2	equ	0xFF1
   425                           status	equ	0xFD8
   426                           intcon	equ	0xFF2
   427                           intcon2	equ	0xFF1
   428                           status	equ	0xFD8
   429                           
   430                           	psect	rparam
   431  0000                     intcon	equ	0xFF2
   432                           intcon2	equ	0xFF1
   433                           status	equ	0xFD8
   434                           intcon	equ	0xFF2
   435                           intcon2	equ	0xFF1
   436                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         0
    Persistent  1
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95      2       3
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0      60
                                              0 COMRAM     2     2      0
                        _ADC_Convert
                           _ADC_Init
                        _Timer0_Init
 ---------------------------------------------------------------------------------
 (1) _Timer0_Init                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ADC_Init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ADC_Convert                                          0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADC_Convert
   _ADC_Init
   _Timer0_Init

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMRAM           5F      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMRAM              5F      2       3       1        3.2%
STACK                0      0       0       2        0.0%
DATA                 0      0       3       3        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BANK5              100      0       0      14        0.0%
ABS                  0      0       3      15        0.0%
BITBANK5           100      0       0      16        0.0%
BIGRAM             5FF      0       0      17        0.0%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%


Microchip Technology PIC18 Macro Assembler V1.32 build 58300 
Symbol Table                                                                                   Wed Jul 09 00:20:56 2014

                     l60 7FEE                       l57 7FDE                       l74 7F70  
                     l58 7FF0             __CFG_CP0$OFF 000000             __CFG_CP1$OFF 000000  
           __CFG_CP2$OFF 000000             __CFG_CP3$OFF 000000                      l707 7FD2  
                    l709 7FD6                      l691 7FB2                      l699 7FC2  
           __CFG_CPB$OFF 000000             __CFG_CPD$OFF 000000            main@Direction 0002  
           __CFG_BORV$18 000000             __CFG_LVP$OFF 000000     __size_of_ADC_Convert 000A  
                   _LATD 000F8C                     _main 7F98         __end_of_ADC_Init 7F98  
                   start 0000            __CFG_IESO$OFF 000000            __CFG_MCLRE$ON 000000  
                  ?_main 0001                    _ANSEL 000F7E                    _T0CON 000FD5  
                  _TMR0H 000FD7                    _TMR0L 000FD6                    _TRISD 000F95  
          __CFG_PWRT$OFF 000000            __CFG_WRT0$OFF 000000            __CFG_WRT1$OFF 000000  
          __CFG_WRT2$OFF 000000            __CFG_WRT3$OFF 000000           __CFG_EBTR0$OFF 000000  
         __CFG_FCMEN$OFF 000000           __CFG_EBTR1$OFF 000000           __CFG_EBTR2$OFF 000000  
         __CFG_EBTR3$OFF 000000            __CFG_WRTB$OFF 000000            __CFG_WRTC$OFF 000000  
          __CFG_WRTD$OFF 000000           __CFG_EBTRB$OFF 000000                    status 000FD8  
         __CFG_HFOFST$ON 000000          __initialization 7F68             __end_of_main 8000  
                 ??_main 0001            __activetblptr 000000                   _ADCON0 000FC2  
                 _ADCON1 000FC1                   _ADCON2 000FC0                   _ADRESH 000FC4  
                 _ANSELH 000F7F           __CFG_WDTEN$OFF 000000            ??_Timer0_Init 0001  
         __CFG_XINST$OFF 000000           __CFG_STVREN$ON 000000                ?_ADC_Init 0001  
             __accesstop 0060  __end_of__initialization 7F68          __CFG_PBADEN$OFF 000000  
         __pcstackCOMRAM 0001      __end_of_Timer0_Init 7F86               ??_ADC_Init 0001  
             __pnvCOMRAM 0003            ??_ADC_Convert 0001                  __Hparam 0000  
            _Timer0_Init 7F78                  __Lparam 0000                  __pcinit 7F68  
              _ANSELbits 000F7E                  __ramtop 0600                  __ptext0 7F98  
                __ptext1 7F78                  __ptext2 7F86                  __ptext3 7F6E  
              _T0CONbits 000FD5     end_of_initialization 7F68      __end_of_ADC_Convert 7F78  
              _PORTBbits 000F81                _TRISAbits 000F92                _TRISBbits 000F93  
      __size_of_ADC_Init 0012      start_initialization 7F68              _ADC_Convert 7F6E  
       __CFG_LPT1OSC$OFF 000000             ?_Timer0_Init 0001        __CFG_CCP2MX$PORTC 000000  
               _ADC_Init 7F86         __CFG_WDTPS$32768 000000               _ADCON0bits 000FC2  
               _WPUBbits 000F7C              _LED_Display 0003              _INTCON2bits 000FF1  
               __Hrparam 0000                 __Lrparam 0000       __CFG_BOREN$SBORDIS 000000  
           ?_ADC_Convert 0001        main@SwitchPressed 0001            __size_of_main 0068  
   __size_of_Timer0_Init 000E               _INTCONbits 000FF2        __CFG_FOSC$INTIO67 000000  
